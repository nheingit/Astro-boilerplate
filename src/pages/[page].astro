---
import Layout from '../layouts/Layout.astro';
import '@/globals.css';
import { BlogPost } from '@/components/blog-post';
import Pagination from '../components/Pagination.astro';

interface Post {
  frontmatter: {
    title: string;
    date: string;
    slug: string;
    [key: string]: any; // for other properties
  };
  rawContent: () => string;
}

export async function getStaticPaths({ paginate }: { paginate: (posts: Post[], options: { pageSize: number }) => any }) {
  const allPosts: Post[] = await Astro.glob<Post>('../posts/*.md');
  
  // Sort posts by date (newest first)
  const sortedPosts: Post[] = allPosts.sort((a: Post, b: Post) => 
    new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime()
  );
  
  // Generate pages, 5 posts per page
  return paginate(sortedPosts, { pageSize: 5 });
}

const { page } = Astro.props;
---
<Layout title="Nheindev">
  {page.currentPage !== 1 && (
    <Pagination currentPage={page.currentPage} totalPages={page.lastPage} baseUrl="/" />
  )}
  
  {page.data.map((post: Post, index: number) => (
    <>
      <BlogPost 
        client:only="react"
        content={post.rawContent()} 
        frontmatter={post.frontmatter}
      />
      {index < page.data.length - 1 && (
        <hr class="my-8 h-px border-0 bg-gray-300" />
      )}
    </>
  ))}
  
  <Pagination currentPage={page.currentPage} totalPages={page.lastPage} baseUrl="/" />
</Layout>